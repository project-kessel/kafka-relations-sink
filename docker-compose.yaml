services:
  zookeeper:
    container_name: rbac_zookeeper
    image: registry.redhat.io/amq-streams/kafka-37-rhel9:2.7.0-6
    command: [
      "sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2191"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    container_name: rbac_kafka
    image: registry.redhat.io/amq-streams/kafka-37-rhel9:2.7.0-6
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
    depends_on:
      - zookeeper
    mem_limit: 500m
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://kafka:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "storage-topic:1:1:compact,global-id-topic:1:1:compact,input-topic:1:1:compact,logx-topic:1:1:compact,dbx-topic:1:1:compact"
      KAFKA_HEAP_OPTS: "-Xmx500M -Xms500M"

  relations_sink_connect:
    container_name: relations_sink_connect
    image: registry.redhat.io/amq-streams/kafka-37-rhel9:2.7.0-6
    command: [
      "sh", "-c", "bin/connect-distributed.sh /opt/kafka/config/relations_connect.properties"
    ]
    depends_on:
      - kafka
    #mem_limit: 500m
    ports:
      - "8084:8083"
      - "5005:5005"
    environment:
      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=*:5005,server=y,suspend=n"
    volumes:
      - kafka-connect-logs:/opt/kafka/logs
      - ./relations_connect.properties:/opt/kafka/config/relations_connect.properties
      - ./relations_sink.json:/opt/kafka/config/relations_sink.json
      - ./target/kafka-relations-sink-1.0-SNAPSHOT.jar:/opt/kafka/plugins/kafka-relations-sink-1.0-SNAPSHOT.jar
    secrets:
      - source: relations-client-credentials
        target: /secrets/oidc-client-credentials

  relations-api:
    image: "quay.io/cloudservices/kessel-relations:latest"
    environment:
      - "SPICEDB_PRESHARED=${SPICEDB_GRPC_PRESHARED_KEY}"
      - "SPICEDB_SCHEMA_FILE=/schema_file"
      - "SPICEDB_ENDPOINT=spicedb:50051"
    configs:
      - schema_file
    restart: "always"
    ports:
      - "8000:8000"
      - "9000:9000"
    depends_on:
      - "spicedb"

  spicedb:
    image: "authzed/spicedb"
    command: "serve"
    restart: "always"
    ports:
      - "8080:8080"
      - "9090:9090"
      - "50051:50051"
    environment:
      - "SPICEDB_GRPC_PRESHARED_KEY=${SPICEDB_GRPC_PRESHARED_KEY}"
      - "SPICEDB_DATASTORE_ENGINE=postgres"
      - "SPICEDB_DATASTORE_CONN_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/spicedb?sslmode=disable"
    depends_on:
      - "migrate"

  migrate:
    image: "authzed/spicedb"
    command: "migrate head"
    restart: "on-failure"
    environment:
      - "SPICEDB_DATASTORE_ENGINE=postgres"
      - "SPICEDB_DATASTORE_CONN_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/spicedb?sslmode=disable"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: "postgres"
    command: -c track_commit_timestamp=on
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_DB=${POSTGRES_DBNAME}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5

volumes:
  kafka-connect-logs:

configs:
  spicedb_pre_shared:
    environment: "SPICEDB_GRPC_PRESHARED_KEY"
  schema_file:
    file: test/spicedb_schema.zed

secrets:
  relations-client-credentials:
    file: test/.client_credentials
